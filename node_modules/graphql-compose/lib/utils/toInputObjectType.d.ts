import { GraphQLType, GraphQLInputType, GraphQLObjectType } from 'graphql-compose/lib/graphql';
import { InputTypeComposer } from 'graphql-compose/lib/InputTypeComposer';
import { ObjectTypeComposer } from 'graphql-compose/lib/ObjectTypeComposer';
import { InterfaceTypeComposer } from 'graphql-compose/lib/InterfaceTypeComposer';
import { SchemaComposer } from 'graphql-compose/lib/SchemaComposer';

export interface ToInputObjectTypeOpts {
  prefix?: string;
  postfix?: string;
}

export function toInputObjectType<TContext>(
  tc: ObjectTypeComposer<any, TContext> | InterfaceTypeComposer<any, TContext>,
  opts?: ToInputObjectTypeOpts
): InputTypeComposer<TContext>;

export interface ConvertInputObjectFieldOpts {
  prefix?: string;
  postfix?: string;
  fieldName?: string;
  outputTypeName?: string;
}

export function convertInputObjectField(
  field: GraphQLType,
  opts: ConvertInputObjectFieldOpts,
  schemaComposer: SchemaComposer<any>
): GraphQLInputType | null;
