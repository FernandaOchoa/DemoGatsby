import * as graphql from 'graphql-compose/lib/graphql';
import { SchemaComposer } from 'graphql-compose/lib/SchemaComposer';

export { graphql };

declare const schemaComposer: SchemaComposer<any>;
declare const sc: SchemaComposer<any>;
export {
  SchemaComposer, // SchemaComposer class
  schemaComposer, // SchemaComposer default global instance
  sc, // SchemaComposer default global instance (alias for schemaComposer)
};

export { ObjectTypeComposer, isComposeOutputType } from 'graphql-compose/lib/ObjectTypeComposer';
export { InputTypeComposer, isComposeInputType } from 'graphql-compose/lib/InputTypeComposer';
export { EnumTypeComposer } from 'graphql-compose/lib/EnumTypeComposer';
export { ScalarTypeComposer } from 'graphql-compose/lib/ScalarTypeComposer';
export { InterfaceTypeComposer } from 'graphql-compose/lib/InterfaceTypeComposer';
export { UnionTypeComposer } from 'graphql-compose/lib/UnionTypeComposer';
export { Resolver } from 'graphql-compose/lib/Resolver';

export { TypeStorage } from 'graphql-compose/lib/TypeStorage';
export { TypeMapper } from 'graphql-compose/lib/TypeMapper';

// Scalar types
export { GraphQLDate, GraphQLBuffer, GraphQLGeneric, GraphQLJSON } from 'graphql-compose/lib/type';

// Utils
export { getProjectionFromAST, getFlatProjectionFromAST } from 'graphql-compose/lib/utils/projection';
export { toInputObjectType, ConvertInputObjectFieldOpts } from 'graphql-compose/lib/utils/toInputObjectType';
export * from 'graphql-compose/lib/utils/misc';
export * from 'graphql-compose/lib/utils/is';
export * from 'graphql-compose/lib/utils/graphqlVersion';
export { default as toDottedObject } from 'graphql-compose/lib/utils/toDottedObject';
export { default as deepmerge } from 'graphql-compose/lib/utils/deepmerge';
export { filterByDotPaths } from 'graphql-compose/lib/utils/filterByDotPaths';
export { pluralize } from 'graphql-compose/lib/utils/pluralize';

export {
  GetRecordIdFn,
  GraphQLObjectTypeExtended,
  ComposeObjectTypeConfig,
  ComposeOutputType,
  ComposeFieldConfig,
  ComposeFieldConfigAsObject,
  ComposeFieldConfigMap,
  ComposeArgumentType,
  ComposeArgumentConfig,
  ComposeArgumentConfigAsObject,
  ComposeFieldConfigArgumentMap,
  RelationThunkMap,
  RelationOpts,
  RelationOptsWithResolver,
  RelationOptsWithFieldConfig,
  ArgsMap,
  RelationArgsMapperFn,
  RelationArgsMapper,
  ObjectTypeComposeDefinition,
} from 'graphql-compose/lib/ObjectTypeComposer';

export {
  ComposeInputType,
  ComposeInputFieldConfig,
  ComposeInputFieldConfigAsObject,
  ComposeInputFieldConfigMap,
  ComposeInputObjectTypeConfig,
  InputTypeComposeDefinition,
} from 'graphql-compose/lib/InputTypeComposer';

export { ComposeScalarTypeConfig, ScalarTypeComposeDefinition } from 'graphql-compose/lib/ScalarTypeComposer';
export { ComposeEnumTypeConfig, EnumTypeComposeDefinition } from 'graphql-compose/lib/EnumTypeComposer';
export { ComposeUnionTypeConfig, UnionTypeComposeDefinition } from 'graphql-compose/lib/UnionTypeComposer';
export {
  ComposeInterfaceTypeConfig,
  InterfaceTypeComposeDefinition,
} from 'graphql-compose/lib/InterfaceTypeComposer';

export {
  ResolveParams,
  ResolverKinds,
  ResolverFilterArgFn,
  ResolverFilterArgConfig,
  ResolverSortArgFn,
  ResolverSortArgConfig,
  ResolverOpts,
  ResolverWrapCb,
  ResolverRpCb,
  ResolverNextRpCb,
  ResolverWrapArgsCb,
  ResolverWrapTypeCb,
  ResolveDebugOpts,
} from 'graphql-compose/lib/Resolver';

export { ProjectionType, ProjectionNode } from 'graphql-compose/lib/utils/projection';

export { TypeDefinitionString, TypeWrappedString, TypeNameString } from 'graphql-compose/lib/TypeMapper';
